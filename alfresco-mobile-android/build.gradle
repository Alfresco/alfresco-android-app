/*
 *  Copyright (C) 2005-2016 Alfresco Software Limited.
 *
 *  This file is part of Alfresco Mobile for Android.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId APPLICATION_ID

        minSdkVersion 15
        targetSdkVersion 23
        versionCode 80

        versionName VERSION_NAME

        manifestPlaceholders = [PROVIDER_AUTHORITY: PROVIDER_AUTHORITY]
        resValue "string", "account_name", ACCOUNT_ID
        resValue "string", "sync_adapter", SYNC_ADAPTER
        resValue "string", "favorites_adapter", FAVORITES_ADAPTER

        defaultPublishConfig DEFAULT_PUBLISH
        resValue "string", "oauth_api_key", OAUTH_API_KEY
        resValue "string", "oauth_api_secret", OAUTH_API_SECRET
        resValue "string", "oauth_callback", OAUTH_CALLBACK
        resValue "string", "oauth_scope", OAUTH_SCOPE
        resValue "string", "bamboo_buildnumber", BUILDNUMBER

        resValue "string", "ga_trackingId", TRACKER_ID
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    signingConfigs {

        custom {
            //Add here your custom sign configuration
        }


        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            // Important : In case of custom application
            // Don't forget to change all values to custom debug values
            applicationIdSuffix ".debug"

            manifestPlaceholders = [PROVIDER_AUTHORITY: PROVIDER_AUTHORITY_DEBUG]
            resValue "string", "account_name", ACCOUNT_ID_DEBUG
            resValue "string", "sync_adapter", SYNC_ADAPTER_DEBUG
            resValue "string", "favorites_adapter", FAVORITES_ADAPTER_DEBUG

            resValue "string", "hockeyapp_key", HOCKEYAPP_KEY
            resValue "string", "ga_trackingId", TRACKER_ID_DEBUG
        }

        release {

            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(output.outputFile.parent, output.outputFile.name.replace(".apk", "-${variant.versionName}.apk"))
                }
            }
        }
    }


    productFlavors {
        //CUSTOM EXTENSION FLAVOR
        custom {
            //Add here custom configuration

            dependencies {
                //Add here 3rd party dependencies
            }
        }

        //PLAY STORE FLAVOR
        store {
            dependencies {
                //DEBUG BUILD TYPE
                debugCompile project(':extensions:hockeyapp')
                debugCompile project(':extensions:analytics')
                debugCompile project(':extensions:tools')


                storeCompile project(':extensions:samsung')
                storeCompile project(':extensions:scansnap')
                storeCompile project(':extensions:analytics')
            }
        }

        //MOBILE IRON FLAVOR
        mobileiron {
            dependencies {
                mobileironCompile project(':mdm:mobileiron')
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
    }
}

dependencies {
    //COMMON TO ALL VARIANTS
    compile project(':platform:foundation')
}
